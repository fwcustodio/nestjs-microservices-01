apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: ecommerce-microservices
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway
        image: nestjs-ecommerce/gateway:latest
        ports:
        - containerPort: 3000
        env:
        - name: GATEWAY_PORT
          value: "3000"
        - name: CUSTOMER_PORT
          value: "3001"
        - name: PRODUCTS_PORT
          value: "3002"
        - name: SHOPPING_PORT
          value: "3003"
        - name: AUTH_PORT
          value: "3004"
        - name: NODE_ENV
          value: "production"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: wait-for-services
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z auth-service 3004; do echo waiting for auth-service; sleep 2; done;
          until nc -z customer-service 3001; do echo waiting for customer-service; sleep 2; done;
          until nc -z products-service 3002; do echo waiting for products-service; sleep 2; done;
          until nc -z shopping-service 3003; do echo waiting for shopping-service; sleep 2; done;
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: ecommerce-microservices
spec:
  selector:
    app: gateway
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer