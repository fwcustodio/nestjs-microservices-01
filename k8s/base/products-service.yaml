apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-service
  namespace: ecommerce-microservices
spec:
  replicas: 3
  selector:
    matchLabels:
      app: products-service
  template:
    metadata:
      labels:
        app: products-service
    spec:
      containers:
      - name: products-service
        image: nestjs-ecommerce/products-service:latest
        ports:
        - containerPort: 3002
        env:
        - name: PRODUCTS_DB_URI
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PRODUCTS_DB_URI
        - name: PRODUCTS_PORT
          value: "3002"
        - name: NODE_ENV
          value: "production"
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: AWS_REGION
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: AWS_S3_BUCKET
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: wait-for-mongodb
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z mongodb-products 27017; do echo waiting for mongodb-products; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: products-service
  namespace: ecommerce-microservices
spec:
  selector:
    app: products-service
  ports:
  - port: 3002
    targetPort: 3002
  type: ClusterIP